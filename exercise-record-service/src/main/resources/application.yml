server:
  port: 8086

spring:
  application:
    name: exercise-record-service

  datasource:
    url: jdbc:mysql://gaenari.kr:30036/my_database?serverTimezone=UTC&useUniCode=yes&characterEncoding=UTF-8
    username: root
    password: Ssafy123!@
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    generate-ddl: true
    properties:
      hibernate:
        format_sql: true
    defer-datasource-initialization: true

  sql:
    init:
      data-locations: classpath*:db/data.sql
      mode: never # 스키마 초기화하려면 always로 바꿔야 함
      platform: mysql

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

springdoc:
  api-docs:
    enabled: true
    version: openapi_3_1
  enable-spring-security: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

feign:
  url:
    member-service: http://localhost:8081
    inventory-service: http://localhost:8084
    program-service: http://localhost:8085
    exercise-record-service: http://localhost:8086
    challenge-service: http://localhost:8088
  client:
    config:
      default:
        connectTimeout: 5000
        readTimeout: 5000
  circuitbreaker:
    enabled: true

resilience4j:
  circuitbreaker:
    configs:
      default:
        waitDurationInOpenState: 30s # HALF_OPEN 상태로 빨리 전환되어 장애가 복구 될 수 있도록 기본값(60s)보다 작게 설정
        slowCallRateThreshold: 80 # slowCall 발생 시 서버 스레드 점유로 인해 장애가 생길 수 있으므로 기본값(100)보다 조금 작게 설정
        slowCallDurationThreshold: 5s # 위와 같은 이유로 5초를 slowCall로 판단함. 해당 값은 TimeLimiter의 timeoutDuration보다 작아야 함
        registerHealthIndicator: true
    instances:
      default:
        baseConfig: default
  timelimiter:
    configs:
      default:
        timeoutDuration: 6s # slowCallDurationThreshold보다는 크게 설정되어야 함
        cancelRunningFuture: true

scheduler:
  cron:
    expression: "0 0 0 * * ?" # 자정마다 실행, "*/30 * * * * ?" # 30초마다 실행